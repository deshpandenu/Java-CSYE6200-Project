package edu.neu.csye6200;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import edu.neu.csye6200.Game.STATE;

public class Menu extends MouseAdapter{
	private Game game;
	private Handler handler;
	private Random r  = new Random();
	private HUD hud;
	//private Ports port = 	

	
	public Menu(Game game, Handler handler,HUD hud)
	{
	 	this.game = game;
	 	this.hud = hud;
	 	this.handler = handler;
	 	
	}
	
	public void mousePressed(MouseEvent e)
	{
		int mx =e.getX();
		int my = e.getY();
		
		if(game.gameState==STATE.Menu )
		{
			if(mouseOver(mx, my,200, 150, 250, 70))
				{
					game.gameState = STATE.Game;
					handler.object.clear();
					handler.addObject(new Player(Game.WIDTH/2-32,Game.HEIGHT/2-32,ID.Player,handler));
					handler.addObject(new BasicEnemy(r.nextInt(Game.WIDTH-32),r.nextInt(Game.HEIGHT-32),ID.BasicEnemy,handler));
					hud.setScore(0);
					hud.setEnemies(1);
				}
			if(mouseOver(mx, my,200, 350, 250, 70))
				{
					System.exit(1);
				
				}
		}
		

		if(mouseOver(mx, my,200, 250, 250, 70) && game.gameState == STATE.Menu)
		{
			game.gameState = STATE.Connect;
//			for (int i=0; i<25;i++)
//				handler.addObject(new MenuBackground (r.nextInt(Game.WIDTH-32),r.nextInt(Game.HEIGHT-32),ID.MenuParticle,handler));
		}
		
		
		if(game.gameState == STATE.End)
		{
			if(mouseOver(mx, my,200, 350, 250, 70))
			{
				game.gameState = STATE.Menu;
			}
			
			if(mouseOver(mx, my,200, 250, 250, 70))
			{
				game.gameState = STATE.Game;
				handler.object.clear();
				handler.addObject(new Player(Game.WIDTH/2-32,Game.HEIGHT/2-32,ID.Player,handler));
				handler.addObject(new BasicEnemy(r.nextInt(Game.WIDTH-32),r.nextInt(Game.HEIGHT-32),ID.BasicEnemy,handler));
				hud.setScore(0);
				hud.setEnemies(1);
						
				}
			
		}

		
		//MENU EXIT
//		if(mouseOver(mx, my,200, 350, 250, 70) && game.gameState == STATE.Menu && game.gameState != STATE.End)
//		{
//			System.exit(1);
//		}
//		
		//CONNEcT BACK
		if(game.gameState == STATE.Connect)
		{
			if(mouseOver(mx, my,200, 350, 250, 70) && (game.gameState == STATE.Connect|| game.gameState == STATE.End))
			{
				game.gameState = STATE.Menu;
			}
			
			
			
			
		}
		

		
	}
	
	private boolean mouseOver(int mx,int my,int x, int y, int width, int height)
	{
		if(mx>x && mx<x+width)
		{
			if(my>y && my<y+height)
			{
				return true;
			}
			else return false;
		}
		else
			return false;
		
	}
	
	
	public void tick() {}
	
	public void render(Graphics g) {
		if(game.gameState == STATE.Menu)
		{
		g.setColor(Color.white);
		g.setFont(new Font("default", Font.BOLD, 42));
		g.drawString("Game Overload",160,50);
		g.drawString("Menu",280,110);
		
		g.setFont(new Font("default", Font.BOLD, 35));
		g.setColor(Color.cyan);
		g.drawRect(200, 150, 250, 70);
		g.drawString("Play",290,200);
		
		g.setColor(Color.cyan);
		g.drawRect(200, 250, 250, 70);
		g.drawString("Connect Mod",210,300);
		
		g.setColor(Color.cyan);
		g.drawRect(200, 350, 250, 70);
		g.drawString("Exit",290,400);
		}
		else if(game.gameState == STATE.Connect)
		{
			Ports ports = new Ports();
			int count = 0;
			int x = 100;
			int y = 100;
			List<String> clist = new ArrayList<>();	
			clist = ports.getMenuPorts();
			if (clist.isEmpty())
			{
				g.setFont(new Font("default", Font.BOLD, 30));
				g.drawString("No ports found",200,250);
			}
			else
			{
				for (String conList : clist) 
					{
					g.setColor(Color.white);
					g.setFont(new Font("default", Font.BOLD, 30));
					g.drawRect(x,(y+count*60),120,50);
					g.drawString(conList,x+20,(y+40+(count*60)));
					count++;
					}
			}
		
			
			
			g.setFont(new Font("default", Font.BOLD, 35));
			g.setColor(Color.cyan);
			g.drawRect(200, 350, 250, 70);
			g.drawString("Back",290,400);
			
		}
		else if(game.gameState == STATE.End)
		{
			g.setColor(Color.white);
			g.setFont(new Font("default", Font.BOLD, 42));
			g.drawString("Game Over",160,50);
			g.drawString("Your Score: "+hud.getScore(),110,110);
			
			g.setFont(new Font("default", Font.BOLD, 35));
			g.setColor(Color.cyan);
			g.drawRect(200, 250, 250, 70);
			g.drawString("Play Again",222,300);
			
			
			g.setFont(new Font("default", Font.BOLD, 35));
			g.setColor(Color.cyan);
			g.drawRect(200, 350, 250, 70);
			g.drawString("Menu",290,400);
			
		}
	}

}
